from scrapy import signals as signals
from scrapy.core.downloader.handlers import DownloadHandlers as DownloadHandlers
from scrapy.core.downloader.middleware import DownloaderMiddlewareManager as DownloaderMiddlewareManager
from scrapy.resolver import dnscache as dnscache
from scrapy.utils.defer import mustbe_deferred as mustbe_deferred
from scrapy.utils.httpobj import urlparse_cached as urlparse_cached
from typing import Any

class Slot:
    concurrency: Any = ...
    delay: Any = ...
    randomize_delay: Any = ...
    active: Any = ...
    queue: Any = ...
    transferring: Any = ...
    lastseen: int = ...
    latercall: Any = ...
    def __init__(self, concurrency: Any, delay: Any, randomize_delay: Any) -> None: ...
    def free_transfer_slots(self): ...
    def download_delay(self): ...
    def close(self) -> None: ...

class Downloader:
    DOWNLOAD_SLOT: str = ...
    settings: Any = ...
    signals: Any = ...
    slots: Any = ...
    active: Any = ...
    handlers: Any = ...
    total_concurrency: Any = ...
    domain_concurrency: Any = ...
    ip_concurrency: Any = ...
    randomize_delay: Any = ...
    middleware: Any = ...
    def __init__(self, crawler: Any) -> None: ...
    def fetch(self, request: Any, spider: Any): ...
    def needs_backout(self): ...
    def close(self) -> None: ...
