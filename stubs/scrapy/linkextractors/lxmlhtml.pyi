from scrapy.link import Link as Link
from scrapy.linkextractors import FilteringLinkExtractor as FilteringLinkExtractor
from scrapy.utils.misc import arg_to_iter as arg_to_iter, rel_has_nofollow as rel_has_nofollow
from scrapy.utils.response import get_base_url as get_base_url
from typing import Any, Optional

XHTML_NAMESPACE: str

class LxmlParserLinkExtractor:
    scan_tag: Any = ...
    scan_attr: Any = ...
    process_attr: Any = ...
    unique: Any = ...
    strip: Any = ...
    link_key: Any = ...
    def __init__(self, tag: str = ..., attr: str = ..., process: Optional[Any] = ..., unique: bool = ..., strip: bool = ..., canonicalized: bool = ...) -> None: ...
    def extract_links(self, response: Any): ...

class LxmlLinkExtractor(FilteringLinkExtractor):
    def __init__(self, allow: Any = ..., deny: Any = ..., allow_domains: Any = ..., deny_domains: Any = ..., restrict_xpaths: Any = ..., tags: Any = ..., attrs: Any = ..., canonicalize: bool = ..., unique: bool = ..., process_value: Optional[Any] = ..., deny_extensions: Optional[Any] = ..., restrict_css: Any = ..., strip: bool = ..., restrict_text: Optional[Any] = ...) -> None: ...
    def extract_links(self, response: Any): ...
