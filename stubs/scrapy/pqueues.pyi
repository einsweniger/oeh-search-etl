from scrapy.utils.misc import create_instance as create_instance
from typing import Any

logger: Any

class ScrapyPriorityQueue:
    @classmethod
    def from_crawler(cls, crawler: Any, downstream_queue_cls: Any, key: Any, startprios: Any = ...): ...
    crawler: Any = ...
    downstream_queue_cls: Any = ...
    key: Any = ...
    queues: Any = ...
    curprio: Any = ...
    def __init__(self, crawler: Any, downstream_queue_cls: Any, key: Any, startprios: Any = ...) -> None: ...
    def init_prios(self, startprios: Any) -> None: ...
    def qfactory(self, key: Any): ...
    def priority(self, request: Any): ...
    def push(self, request: Any) -> None: ...
    def pop(self): ...
    def close(self): ...
    def __len__(self): ...

class DownloaderInterface:
    downloader: Any = ...
    def __init__(self, crawler: Any) -> None: ...
    def stats(self, possible_slots: Any): ...
    def get_slot_key(self, request: Any): ...

class DownloaderAwarePriorityQueue:
    @classmethod
    def from_crawler(cls, crawler: Any, downstream_queue_cls: Any, key: Any, startprios: Any = ...): ...
    downstream_queue_cls: Any = ...
    key: Any = ...
    crawler: Any = ...
    pqueues: Any = ...
    def __init__(self, crawler: Any, downstream_queue_cls: Any, key: Any, slot_startprios: Any = ...) -> None: ...
    def pqfactory(self, slot: Any, startprios: Any = ...): ...
    def pop(self): ...
    def push(self, request: Any) -> None: ...
    def close(self): ...
    def __len__(self): ...
    def __contains__(self, slot: Any): ...
