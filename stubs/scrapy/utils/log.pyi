import logging
from scrapy.exceptions import ScrapyDeprecationWarning as ScrapyDeprecationWarning
from scrapy.settings import Settings as Settings
from scrapy.utils.versions import scrapy_components_versions as scrapy_components_versions
from typing import Any, Optional

logger: Any

def failure_to_exc_info(failure: Any): ...

class TopLevelFormatter(logging.Filter):
    loggers: Any = ...
    def __init__(self, loggers: Optional[Any] = ...) -> None: ...
    def filter(self, record: Any): ...

DEFAULT_LOGGING: Any

def configure_logging(settings: Optional[Any] = ..., install_root_handler: bool = ...) -> None: ...
def install_scrapy_root_handler(settings: Any) -> None: ...
def get_scrapy_root_handler(): ...
def log_scrapy_info(settings: Any) -> None: ...

class StreamLogger:
    logger: Any = ...
    log_level: Any = ...
    linebuf: str = ...
    def __init__(self, logger: Any, log_level: Any = ...) -> None: ...
    def write(self, buf: Any) -> None: ...
    def flush(self) -> None: ...

class LogCounterHandler(logging.Handler):
    crawler: Any = ...
    def __init__(self, crawler: Any, *args: Any, **kwargs: Any) -> None: ...
    def emit(self, record: Any) -> None: ...

def logformatter_adapter(logkws: Any): ...
