from scrapy.exceptions import IgnoreRequest as IgnoreRequest
from scrapy.utils.reactor import is_asyncio_reactor_installed as is_asyncio_reactor_installed
from typing import Any

def defer_fail(_failure: Any): ...
def defer_succeed(result: Any): ...
def defer_result(result: Any): ...
def mustbe_deferred(f: Any, *args: Any, **kw: Any): ...
def parallel(iterable: Any, count: Any, callable: Any, *args: Any, **named: Any): ...
def process_chain(callbacks: Any, input: Any, *a: Any, **kw: Any): ...
def process_chain_both(callbacks: Any, errbacks: Any, input: Any, *a: Any, **kw: Any): ...
def process_parallel(callbacks: Any, input: Any, *a: Any, **kw: Any): ...
def iter_errback(iterable: Any, errback: Any, *a: Any, **kw: Any) -> None: ...
def deferred_from_coro(o: Any): ...
def deferred_f_from_coro_f(coro_f: Any): ...
def maybeDeferred_coro(f: Any, *args: Any, **kw: Any): ...
