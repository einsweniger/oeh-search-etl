from scrapy.exceptions import IgnoreRequest as IgnoreRequest, NotConfigured as NotConfigured
from scrapy.http import HtmlResponse as HtmlResponse
from scrapy.utils.response import get_meta_refresh as get_meta_refresh
from typing import Any

logger: Any

class BaseRedirectMiddleware:
    enabled_setting: str = ...
    max_redirect_times: Any = ...
    priority_adjust: Any = ...
    def __init__(self, settings: Any) -> None: ...
    @classmethod
    def from_crawler(cls, crawler: Any): ...

class RedirectMiddleware(BaseRedirectMiddleware):
    def process_response(self, request: Any, response: Any, spider: Any): ...

class MetaRefreshMiddleware(BaseRedirectMiddleware):
    enabled_setting: str = ...
    def __init__(self, settings: Any) -> None: ...
    def process_response(self, request: Any, response: Any, spider: Any): ...
