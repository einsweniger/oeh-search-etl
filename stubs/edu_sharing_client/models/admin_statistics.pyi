from typing import Any, Optional

class AdminStatistics:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, active_sessions: Optional[Any] = ..., number_of_previews: Optional[Any] = ..., max_memory: Optional[Any] = ..., allocated_memory: Optional[Any] = ..., preview_cache_size: Optional[Any] = ..., active_locks: Optional[Any] = ...) -> None: ...
    @property
    def active_sessions(self): ...
    @active_sessions.setter
    def active_sessions(self, active_sessions: Any) -> None: ...
    @property
    def number_of_previews(self): ...
    @number_of_previews.setter
    def number_of_previews(self, number_of_previews: Any) -> None: ...
    @property
    def max_memory(self): ...
    @max_memory.setter
    def max_memory(self, max_memory: Any) -> None: ...
    @property
    def allocated_memory(self): ...
    @allocated_memory.setter
    def allocated_memory(self, allocated_memory: Any) -> None: ...
    @property
    def preview_cache_size(self): ...
    @preview_cache_size.setter
    def preview_cache_size(self, preview_cache_size: Any) -> None: ...
    @property
    def active_locks(self): ...
    @active_locks.setter
    def active_locks(self, active_locks: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
