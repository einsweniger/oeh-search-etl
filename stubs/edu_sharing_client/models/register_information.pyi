from typing import Any, Optional

class RegisterInformation:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, first_name: Optional[Any] = ..., last_name: Optional[Any] = ..., email: Optional[Any] = ..., password: Optional[Any] = ..., organization: Optional[Any] = ..., allow_notifications: bool = ...) -> None: ...
    @property
    def first_name(self): ...
    @first_name.setter
    def first_name(self, first_name: Any) -> None: ...
    @property
    def last_name(self): ...
    @last_name.setter
    def last_name(self, last_name: Any) -> None: ...
    @property
    def email(self): ...
    @email.setter
    def email(self, email: Any) -> None: ...
    @property
    def password(self): ...
    @password.setter
    def password(self, password: Any) -> None: ...
    @property
    def organization(self): ...
    @organization.setter
    def organization(self, organization: Any) -> None: ...
    @property
    def allow_notifications(self): ...
    @allow_notifications.setter
    def allow_notifications(self, allow_notifications: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
