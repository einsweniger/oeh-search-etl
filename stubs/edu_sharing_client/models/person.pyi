from typing import Any, Optional

class Person:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, profile: Optional[Any] = ..., first_name: Optional[Any] = ..., last_name: Optional[Any] = ..., mailbox: Optional[Any] = ...) -> None: ...
    @property
    def profile(self): ...
    @profile.setter
    def profile(self, profile: Any) -> None: ...
    @property
    def first_name(self): ...
    @first_name.setter
    def first_name(self, first_name: Any) -> None: ...
    @property
    def last_name(self): ...
    @last_name.setter
    def last_name(self, last_name: Any) -> None: ...
    @property
    def mailbox(self): ...
    @mailbox.setter
    def mailbox(self, mailbox: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
