from typing import Any, Optional

class SubGroupItem:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, key: Optional[Any] = ..., display_name: Optional[Any] = ..., count: Optional[Any] = ...) -> None: ...
    @property
    def key(self): ...
    @key.setter
    def key(self, key: Any) -> None: ...
    @property
    def display_name(self): ...
    @display_name.setter
    def display_name(self, display_name: Any) -> None: ...
    @property
    def count(self): ...
    @count.setter
    def count(self, count: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
