from typing import Any, Optional

class ErrorResponse:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, error: Optional[Any] = ..., message: Optional[Any] = ..., log_level: Optional[Any] = ..., stacktrace_array: Optional[Any] = ...) -> None: ...
    @property
    def error(self): ...
    @error.setter
    def error(self, error: Any) -> None: ...
    @property
    def message(self): ...
    @message.setter
    def message(self, message: Any) -> None: ...
    @property
    def log_level(self): ...
    @log_level.setter
    def log_level(self, log_level: Any) -> None: ...
    @property
    def stacktrace_array(self): ...
    @stacktrace_array.setter
    def stacktrace_array(self, stacktrace_array: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
