from typing import Any, Optional

class General:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, referenced_in_name: Optional[Any] = ..., referenced_in_type: Optional[Any] = ..., referenced_in_instance: Optional[Any] = ...) -> None: ...
    @property
    def referenced_in_name(self): ...
    @referenced_in_name.setter
    def referenced_in_name(self, referenced_in_name: Any) -> None: ...
    @property
    def referenced_in_type(self): ...
    @referenced_in_type.setter
    def referenced_in_type(self, referenced_in_type: Any) -> None: ...
    @property
    def referenced_in_instance(self): ...
    @referenced_in_instance.setter
    def referenced_in_instance(self, referenced_in_instance: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
