from typing import Any, Optional

class Workflow:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, id: Optional[Any] = ..., color: Optional[Any] = ..., has_receiver: bool = ..., next: Optional[Any] = ...) -> None: ...
    @property
    def id(self): ...
    @id.setter
    def id(self, id: Any) -> None: ...
    @property
    def color(self): ...
    @color.setter
    def color(self, color: Any) -> None: ...
    @property
    def has_receiver(self): ...
    @has_receiver.setter
    def has_receiver(self, has_receiver: Any) -> None: ...
    @property
    def next(self): ...
    @next.setter
    def next(self, next: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
