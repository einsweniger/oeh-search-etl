from typing import Any, Optional

class Usage:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, from_used: Optional[Any] = ..., to_used: Optional[Any] = ..., usage_counter: Optional[Any] = ..., app_subtype: Optional[Any] = ..., app_type: Optional[Any] = ..., type: Optional[Any] = ..., created: Optional[Any] = ..., modified: Optional[Any] = ..., app_user: Optional[Any] = ..., app_user_mail: Optional[Any] = ..., course_id: Optional[Any] = ..., distinct_persons: Optional[Any] = ..., app_id: Optional[Any] = ..., node_id: Optional[Any] = ..., parent_node_id: Optional[Any] = ..., usage_version: Optional[Any] = ..., usage_xml_params: Optional[Any] = ..., usage_xml_params_raw: Optional[Any] = ..., resource_id: Optional[Any] = ..., guid: Optional[Any] = ...) -> None: ...
    @property
    def from_used(self): ...
    @from_used.setter
    def from_used(self, from_used: Any) -> None: ...
    @property
    def to_used(self): ...
    @to_used.setter
    def to_used(self, to_used: Any) -> None: ...
    @property
    def usage_counter(self): ...
    @usage_counter.setter
    def usage_counter(self, usage_counter: Any) -> None: ...
    @property
    def app_subtype(self): ...
    @app_subtype.setter
    def app_subtype(self, app_subtype: Any) -> None: ...
    @property
    def app_type(self): ...
    @app_type.setter
    def app_type(self, app_type: Any) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, type: Any) -> None: ...
    @property
    def created(self): ...
    @created.setter
    def created(self, created: Any) -> None: ...
    @property
    def modified(self): ...
    @modified.setter
    def modified(self, modified: Any) -> None: ...
    @property
    def app_user(self): ...
    @app_user.setter
    def app_user(self, app_user: Any) -> None: ...
    @property
    def app_user_mail(self): ...
    @app_user_mail.setter
    def app_user_mail(self, app_user_mail: Any) -> None: ...
    @property
    def course_id(self): ...
    @course_id.setter
    def course_id(self, course_id: Any) -> None: ...
    @property
    def distinct_persons(self): ...
    @distinct_persons.setter
    def distinct_persons(self, distinct_persons: Any) -> None: ...
    @property
    def app_id(self): ...
    @app_id.setter
    def app_id(self, app_id: Any) -> None: ...
    @property
    def node_id(self): ...
    @node_id.setter
    def node_id(self, node_id: Any) -> None: ...
    @property
    def parent_node_id(self): ...
    @parent_node_id.setter
    def parent_node_id(self, parent_node_id: Any) -> None: ...
    @property
    def usage_version(self): ...
    @usage_version.setter
    def usage_version(self, usage_version: Any) -> None: ...
    @property
    def usage_xml_params(self): ...
    @usage_xml_params.setter
    def usage_xml_params(self, usage_xml_params: Any) -> None: ...
    @property
    def usage_xml_params_raw(self): ...
    @usage_xml_params_raw.setter
    def usage_xml_params_raw(self, usage_xml_params_raw: Any) -> None: ...
    @property
    def resource_id(self): ...
    @resource_id.setter
    def resource_id(self, resource_id: Any) -> None: ...
    @property
    def guid(self): ...
    @guid.setter
    def guid(self, guid: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
