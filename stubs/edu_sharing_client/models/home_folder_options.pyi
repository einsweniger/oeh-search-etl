from typing import Any, Optional

class HomeFolderOptions:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, folders: Optional[Any] = ..., private_files: Optional[Any] = ..., cc_files: Optional[Any] = ..., keep_folder_structure: bool = ...) -> None: ...
    @property
    def folders(self): ...
    @folders.setter
    def folders(self, folders: Any) -> None: ...
    @property
    def private_files(self): ...
    @private_files.setter
    def private_files(self, private_files: Any) -> None: ...
    @property
    def cc_files(self): ...
    @cc_files.setter
    def cc_files(self, cc_files: Any) -> None: ...
    @property
    def keep_folder_structure(self): ...
    @keep_folder_structure.setter
    def keep_folder_structure(self, keep_folder_structure: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
