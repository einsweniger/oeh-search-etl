from typing import Any, Optional

class ParentEntries:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, scope: Optional[Any] = ..., nodes: Optional[Any] = ..., pagination: Optional[Any] = ...) -> None: ...
    @property
    def scope(self): ...
    @scope.setter
    def scope(self, scope: Any) -> None: ...
    @property
    def nodes(self): ...
    @nodes.setter
    def nodes(self, nodes: Any) -> None: ...
    @property
    def pagination(self): ...
    @pagination.setter
    def pagination(self, pagination: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
