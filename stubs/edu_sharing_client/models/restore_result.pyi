from typing import Any, Optional

class RestoreResult:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, archive_node_id: Optional[Any] = ..., node_id: Optional[Any] = ..., parent: Optional[Any] = ..., path: Optional[Any] = ..., name: Optional[Any] = ..., restore_status: Optional[Any] = ...) -> None: ...
    @property
    def archive_node_id(self): ...
    @archive_node_id.setter
    def archive_node_id(self, archive_node_id: Any) -> None: ...
    @property
    def node_id(self): ...
    @node_id.setter
    def node_id(self, node_id: Any) -> None: ...
    @property
    def parent(self): ...
    @parent.setter
    def parent(self, parent: Any) -> None: ...
    @property
    def path(self): ...
    @path.setter
    def path(self, path: Any) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name: Any) -> None: ...
    @property
    def restore_status(self): ...
    @restore_status.setter
    def restore_status(self, restore_status: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
