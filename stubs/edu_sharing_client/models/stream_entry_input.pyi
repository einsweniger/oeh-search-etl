from typing import Any, Optional

class StreamEntryInput:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, id: Optional[Any] = ..., title: Optional[Any] = ..., description: Optional[Any] = ..., nodes: Optional[Any] = ..., properties: Optional[Any] = ..., priority: Optional[Any] = ...) -> None: ...
    @property
    def id(self): ...
    @id.setter
    def id(self, id: Any) -> None: ...
    @property
    def title(self): ...
    @title.setter
    def title(self, title: Any) -> None: ...
    @property
    def description(self): ...
    @description.setter
    def description(self, description: Any) -> None: ...
    @property
    def nodes(self): ...
    @nodes.setter
    def nodes(self, nodes: Any) -> None: ...
    @property
    def properties(self): ...
    @properties.setter
    def properties(self, properties: Any) -> None: ...
    @property
    def priority(self): ...
    @priority.setter
    def priority(self, priority: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
