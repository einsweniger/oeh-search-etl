from typing import Any, Optional

class Mds:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, types: Optional[Any] = ..., ref: Optional[Any] = ..., forms: Optional[Any] = ..., lists: Optional[Any] = ..., views: Optional[Any] = ..., queries: Optional[Any] = ...) -> None: ...
    @property
    def types(self): ...
    @types.setter
    def types(self, types: Any) -> None: ...
    @property
    def ref(self): ...
    @ref.setter
    def ref(self, ref: Any) -> None: ...
    @property
    def forms(self): ...
    @forms.setter
    def forms(self, forms: Any) -> None: ...
    @property
    def lists(self): ...
    @lists.setter
    def lists(self, lists: Any) -> None: ...
    @property
    def views(self): ...
    @views.setter
    def views(self, views: Any) -> None: ...
    @property
    def queries(self): ...
    @queries.setter
    def queries(self, queries: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
