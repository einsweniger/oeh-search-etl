from typing import Any, Optional

class Frontpage:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, total_count: Optional[Any] = ..., display_count: Optional[Any] = ..., mode: Optional[Any] = ..., timespan: Optional[Any] = ..., queries: Optional[Any] = ..., collection: Optional[Any] = ...) -> None: ...
    @property
    def total_count(self): ...
    @total_count.setter
    def total_count(self, total_count: Any) -> None: ...
    @property
    def display_count(self): ...
    @display_count.setter
    def display_count(self, display_count: Any) -> None: ...
    @property
    def mode(self): ...
    @mode.setter
    def mode(self, mode: Any) -> None: ...
    @property
    def timespan(self): ...
    @timespan.setter
    def timespan(self, timespan: Any) -> None: ...
    @property
    def queries(self): ...
    @queries.setter
    def queries(self, queries: Any) -> None: ...
    @property
    def collection(self): ...
    @collection.setter
    def collection(self, collection: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
