from typing import Any, Optional

class MdsV2:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, name: Optional[Any] = ..., create: Optional[Any] = ..., widgets: Optional[Any] = ..., views: Optional[Any] = ..., groups: Optional[Any] = ..., lists: Optional[Any] = ..., sorts: Optional[Any] = ...) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name: Any) -> None: ...
    @property
    def create(self): ...
    @create.setter
    def create(self, create: Any) -> None: ...
    @property
    def widgets(self): ...
    @widgets.setter
    def widgets(self, widgets: Any) -> None: ...
    @property
    def views(self): ...
    @views.setter
    def views(self, views: Any) -> None: ...
    @property
    def groups(self): ...
    @groups.setter
    def groups(self, groups: Any) -> None: ...
    @property
    def lists(self): ...
    @lists.setter
    def lists(self, lists: Any) -> None: ...
    @property
    def sorts(self): ...
    @sorts.setter
    def sorts(self, sorts: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
