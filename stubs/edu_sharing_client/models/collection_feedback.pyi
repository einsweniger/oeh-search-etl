from typing import Any, Optional

class CollectionFeedback:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, created_at: Optional[Any] = ..., creator: Optional[Any] = ..., feedback: Optional[Any] = ...) -> None: ...
    @property
    def created_at(self): ...
    @created_at.setter
    def created_at(self, created_at: Any) -> None: ...
    @property
    def creator(self): ...
    @creator.setter
    def creator(self, creator: Any) -> None: ...
    @property
    def feedback(self): ...
    @feedback.setter
    def feedback(self, feedback: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
