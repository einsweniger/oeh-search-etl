from typing import Any, Optional

class Mediacenter:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, ref: Optional[Any] = ..., editable: bool = ..., authority_name: Optional[Any] = ..., authority_type: Optional[Any] = ..., group_name: Optional[Any] = ..., profile: Optional[Any] = ..., administration_access: bool = ...) -> None: ...
    @property
    def ref(self): ...
    @ref.setter
    def ref(self, ref: Any) -> None: ...
    @property
    def editable(self): ...
    @editable.setter
    def editable(self, editable: Any) -> None: ...
    @property
    def authority_name(self): ...
    @authority_name.setter
    def authority_name(self, authority_name: Any) -> None: ...
    @property
    def authority_type(self): ...
    @authority_type.setter
    def authority_type(self, authority_type: Any) -> None: ...
    @property
    def group_name(self): ...
    @group_name.setter
    def group_name(self, group_name: Any) -> None: ...
    @property
    def profile(self): ...
    @profile.setter
    def profile(self, profile: Any) -> None: ...
    @property
    def administration_access(self): ...
    @administration_access.setter
    def administration_access(self, administration_access: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
