from typing import Any, Optional

class NodeRemote:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, node: Optional[Any] = ..., remote: Optional[Any] = ...) -> None: ...
    @property
    def node(self): ...
    @node.setter
    def node(self, node: Any) -> None: ...
    @property
    def remote(self): ...
    @remote.setter
    def remote(self, remote: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
