from typing import Any, Optional

class CollectionOptions:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, private_collections: Optional[Any] = ..., public_collections: Optional[Any] = ...) -> None: ...
    @property
    def private_collections(self): ...
    @private_collections.setter
    def private_collections(self, private_collections: Any) -> None: ...
    @property
    def public_collections(self): ...
    @public_collections.setter
    def public_collections(self, public_collections: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
