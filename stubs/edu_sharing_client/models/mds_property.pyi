from typing import Any, Optional

class MdsProperty:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, name: Optional[Any] = ..., type: Optional[Any] = ..., default_value: Optional[Any] = ..., processtype: Optional[Any] = ..., key_contenturl: Optional[Any] = ..., concatewithtype: bool = ..., multiple: bool = ..., copy_from: Optional[Any] = ...) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name: Any) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, type: Any) -> None: ...
    @property
    def default_value(self): ...
    @default_value.setter
    def default_value(self, default_value: Any) -> None: ...
    @property
    def processtype(self): ...
    @processtype.setter
    def processtype(self, processtype: Any) -> None: ...
    @property
    def key_contenturl(self): ...
    @key_contenturl.setter
    def key_contenturl(self, key_contenturl: Any) -> None: ...
    @property
    def concatewithtype(self): ...
    @concatewithtype.setter
    def concatewithtype(self, concatewithtype: Any) -> None: ...
    @property
    def multiple(self): ...
    @multiple.setter
    def multiple(self, multiple: Any) -> None: ...
    @property
    def copy_from(self): ...
    @copy_from.setter
    def copy_from(self, copy_from: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
