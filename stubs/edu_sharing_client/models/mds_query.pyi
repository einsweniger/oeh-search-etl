from typing import Any, Optional

class MdsQuery:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, criteriaboxid: Optional[Any] = ..., handlerclass: Optional[Any] = ..., join: Optional[Any] = ..., label: Optional[Any] = ..., layout: Optional[Any] = ..., properties: Optional[Any] = ..., statement: Optional[Any] = ..., stylename: Optional[Any] = ..., widget: Optional[Any] = ...) -> None: ...
    @property
    def criteriaboxid(self): ...
    @criteriaboxid.setter
    def criteriaboxid(self, criteriaboxid: Any) -> None: ...
    @property
    def handlerclass(self): ...
    @handlerclass.setter
    def handlerclass(self, handlerclass: Any) -> None: ...
    @property
    def join(self): ...
    @join.setter
    def join(self, join: Any) -> None: ...
    @property
    def label(self): ...
    @label.setter
    def label(self, label: Any) -> None: ...
    @property
    def layout(self): ...
    @layout.setter
    def layout(self, layout: Any) -> None: ...
    @property
    def properties(self): ...
    @properties.setter
    def properties(self, properties: Any) -> None: ...
    @property
    def statement(self): ...
    @statement.setter
    def statement(self, statement: Any) -> None: ...
    @property
    def stylename(self): ...
    @stylename.setter
    def stylename(self, stylename: Any) -> None: ...
    @property
    def widget(self): ...
    @widget.setter
    def widget(self, widget: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
