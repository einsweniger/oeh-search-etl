from typing import Any, Optional

class Interface:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, url: Optional[Any] = ..., set: Optional[Any] = ..., metadata_prefix: Optional[Any] = ..., documentation: Optional[Any] = ..., format: Optional[Any] = ..., type: Optional[Any] = ...) -> None: ...
    @property
    def url(self): ...
    @url.setter
    def url(self, url: Any) -> None: ...
    @property
    def set(self): ...
    @set.setter
    def set(self, set: Any) -> None: ...
    @property
    def metadata_prefix(self): ...
    @metadata_prefix.setter
    def metadata_prefix(self, metadata_prefix: Any) -> None: ...
    @property
    def documentation(self): ...
    @documentation.setter
    def documentation(self, documentation: Any) -> None: ...
    @property
    def format(self): ...
    @format.setter
    def format(self, format: Any) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, type: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
