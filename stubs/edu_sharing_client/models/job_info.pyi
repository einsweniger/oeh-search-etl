from typing import Any, Optional

class JobInfo:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, start_time: Optional[Any] = ..., finish_time: Optional[Any] = ..., status: Optional[Any] = ..., worst_level: Optional[Any] = ..., log: Optional[Any] = ..., job_detail: Optional[Any] = ...) -> None: ...
    @property
    def start_time(self): ...
    @start_time.setter
    def start_time(self, start_time: Any) -> None: ...
    @property
    def finish_time(self): ...
    @finish_time.setter
    def finish_time(self, finish_time: Any) -> None: ...
    @property
    def status(self): ...
    @status.setter
    def status(self, status: Any) -> None: ...
    @property
    def worst_level(self): ...
    @worst_level.setter
    def worst_level(self, worst_level: Any) -> None: ...
    @property
    def log(self): ...
    @log.setter
    def log(self, log: Any) -> None: ...
    @property
    def job_detail(self): ...
    @job_detail.setter
    def job_detail(self, job_detail: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
