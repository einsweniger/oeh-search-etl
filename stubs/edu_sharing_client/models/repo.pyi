from typing import Any, Optional

class Repo:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, repository_type: Optional[Any] = ..., rendering_supported: bool = ..., id: Optional[Any] = ..., title: Optional[Any] = ..., icon: Optional[Any] = ..., logo: Optional[Any] = ..., is_home_repo: bool = ...) -> None: ...
    @property
    def repository_type(self): ...
    @repository_type.setter
    def repository_type(self, repository_type: Any) -> None: ...
    @property
    def rendering_supported(self): ...
    @rendering_supported.setter
    def rendering_supported(self, rendering_supported: Any) -> None: ...
    @property
    def id(self): ...
    @id.setter
    def id(self, id: Any) -> None: ...
    @property
    def title(self): ...
    @title.setter
    def title(self, title: Any) -> None: ...
    @property
    def icon(self): ...
    @icon.setter
    def icon(self, icon: Any) -> None: ...
    @property
    def logo(self): ...
    @logo.setter
    def logo(self, logo: Any) -> None: ...
    @property
    def is_home_repo(self): ...
    @is_home_repo.setter
    def is_home_repo(self, is_home_repo: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
