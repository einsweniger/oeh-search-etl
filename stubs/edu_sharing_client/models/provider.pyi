from typing import Any, Optional

class Provider:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, legal_name: Optional[Any] = ..., url: Optional[Any] = ..., email: Optional[Any] = ..., area_served: Optional[Any] = ..., location: Optional[Any] = ...) -> None: ...
    @property
    def legal_name(self): ...
    @legal_name.setter
    def legal_name(self, legal_name: Any) -> None: ...
    @property
    def url(self): ...
    @url.setter
    def url(self, url: Any) -> None: ...
    @property
    def email(self): ...
    @email.setter
    def email(self, email: Any) -> None: ...
    @property
    def area_served(self): ...
    @area_served.setter
    def area_served(self, area_served: Any) -> None: ...
    @property
    def location(self): ...
    @location.setter
    def location(self, location: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
