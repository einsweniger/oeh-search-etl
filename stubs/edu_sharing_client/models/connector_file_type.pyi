from typing import Any, Optional

class ConnectorFileType:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, ccressourceversion: Optional[Any] = ..., ccressourcetype: Optional[Any] = ..., ccresourcesubtype: Optional[Any] = ..., editor_type: Optional[Any] = ..., mimetype: Optional[Any] = ..., filetype: Optional[Any] = ..., creatable: bool = ..., editable: bool = ...) -> None: ...
    @property
    def ccressourceversion(self): ...
    @ccressourceversion.setter
    def ccressourceversion(self, ccressourceversion: Any) -> None: ...
    @property
    def ccressourcetype(self): ...
    @ccressourcetype.setter
    def ccressourcetype(self, ccressourcetype: Any) -> None: ...
    @property
    def ccresourcesubtype(self): ...
    @ccresourcesubtype.setter
    def ccresourcesubtype(self, ccresourcesubtype: Any) -> None: ...
    @property
    def editor_type(self): ...
    @editor_type.setter
    def editor_type(self, editor_type: Any) -> None: ...
    @property
    def mimetype(self): ...
    @mimetype.setter
    def mimetype(self, mimetype: Any) -> None: ...
    @property
    def filetype(self): ...
    @filetype.setter
    def filetype(self, filetype: Any) -> None: ...
    @property
    def creatable(self): ...
    @creatable.setter
    def creatable(self, creatable: Any) -> None: ...
    @property
    def editable(self): ...
    @editable.setter
    def editable(self, editable: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
