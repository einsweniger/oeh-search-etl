from typing import Any, Optional

class ACE:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, editable: bool = ..., authority: Optional[Any] = ..., user: Optional[Any] = ..., group: Optional[Any] = ..., permissions: Optional[Any] = ...) -> None: ...
    @property
    def editable(self): ...
    @editable.setter
    def editable(self, editable: Any) -> None: ...
    @property
    def authority(self): ...
    @authority.setter
    def authority(self, authority: Any) -> None: ...
    @property
    def user(self): ...
    @user.setter
    def user(self, user: Any) -> None: ...
    @property
    def group(self): ...
    @group.setter
    def group(self, group: Any) -> None: ...
    @property
    def permissions(self): ...
    @permissions.setter
    def permissions(self, permissions: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
