from typing import Any, Optional

class MdsListProperty:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    def __init__(self, name: Optional[Any] = ..., label: Optional[Any] = ..., label_hint: Optional[Any] = ..., form_height: Optional[Any] = ..., form_length: Optional[Any] = ..., widget: Optional[Any] = ..., widget_title: Optional[Any] = ..., copy_from: Optional[Any] = ..., parameters: Optional[Any] = ..., values: Optional[Any] = ..., default_values: Optional[Any] = ..., multiple: bool = ..., place_holder: Optional[Any] = ..., style_name: Optional[Any] = ..., style_name_label: Optional[Any] = ..., type: Optional[Any] = ...) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name: Any) -> None: ...
    @property
    def label(self): ...
    @label.setter
    def label(self, label: Any) -> None: ...
    @property
    def label_hint(self): ...
    @label_hint.setter
    def label_hint(self, label_hint: Any) -> None: ...
    @property
    def form_height(self): ...
    @form_height.setter
    def form_height(self, form_height: Any) -> None: ...
    @property
    def form_length(self): ...
    @form_length.setter
    def form_length(self, form_length: Any) -> None: ...
    @property
    def widget(self): ...
    @widget.setter
    def widget(self, widget: Any) -> None: ...
    @property
    def widget_title(self): ...
    @widget_title.setter
    def widget_title(self, widget_title: Any) -> None: ...
    @property
    def copy_from(self): ...
    @copy_from.setter
    def copy_from(self, copy_from: Any) -> None: ...
    @property
    def parameters(self): ...
    @parameters.setter
    def parameters(self, parameters: Any) -> None: ...
    @property
    def values(self): ...
    @values.setter
    def values(self, values: Any) -> None: ...
    @property
    def default_values(self): ...
    @default_values.setter
    def default_values(self, default_values: Any) -> None: ...
    @property
    def multiple(self): ...
    @multiple.setter
    def multiple(self, multiple: Any) -> None: ...
    @property
    def place_holder(self): ...
    @place_holder.setter
    def place_holder(self, place_holder: Any) -> None: ...
    @property
    def style_name(self): ...
    @style_name.setter
    def style_name(self, style_name: Any) -> None: ...
    @property
    def style_name_label(self): ...
    @style_name_label.setter
    def style_name_label(self, style_name_label: Any) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, type: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
